{"version":3,"sources":["components/todo-List/TodoList.js","components/todo-create/TodoCreate.js","components/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","dataTodos","map","element","title","id","TodoCreate","useState","getInputTodo","setInputTodo","className","onSubmit","event","preventDefault","newTodo","Math","floor","random","onCreateTodo","type","value","onChange","target","console","log","Todo","getTodos","setTodos","todo","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAceA,EAZE,SAACC,GACd,OACI,6BAEQA,EAAMC,UAAUC,KAAI,SAAAC,GAChB,OAAO,6BAAuBA,EAAQC,OAAtBD,EAAQE,UCwB7BC,G,MA5BI,SAACN,GAChB,MAAqCO,mBAAS,IAA9C,mBAAOC,EAAP,KAAqBC,EAArB,KAmBA,OACI,uBAAMC,UAAU,YAAYC,SAlBX,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAU,CACZT,GAAIU,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EACtCb,MAAOI,GAGXR,EAAMkB,aAAaJ,GACnBL,EAAa,KASb,UACI,uBAAOU,KAAK,OAAOC,MAAOZ,EAAca,SAPxB,SAACT,GACrBH,EAAaG,EAAMU,OAAOF,OAC1BG,QAAQC,IAAIhB,MAMR,wBAAQW,KAAK,SAAb,sBCDGM,EApBF,WACT,MAA6BlB,mBAAS,CAClC,CAAEF,GAAI,EAAGD,MAAO,OAChB,CAAEC,GAAI,EAAGD,MAAO,SAChB,CAAEC,GAAI,EAAGD,MAAO,UAHpB,mBAAOsB,EAAP,KAAiBC,EAAjB,KAUA,OACI,gCACI,2CACA,cAAC,EAAD,CAAYT,aAPI,SAACU,GACrBD,EAASD,EAASG,OAAOD,OAOrB,cAAC,EAAD,CAAU3B,UAAYyB,QCTnBI,EARH,WACR,OACI,qBAAKpB,UAAU,MAAf,SACI,cAAC,EAAD,OCMGqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDVQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAMhCb,M","file":"static/js/main.103636fb.chunk.js","sourcesContent":["import \"./TodoList.css\";\n\nconst TodoList = (props) => {\n    return (\n        <ul>\n            {\n                props.dataTodos.map(element => {\n                    return <li key={element.id}>{ element.title }</li>\n                })\n            }\n        </ul>\n    );\n}\n\nexport default TodoList;","import './TodoCreate.css';\nimport { useState } from 'react';\n\nconst TodoCreate = (props) => {\n    const [getInputTodo, setInputTodo] = useState(\"\");\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const newTodo = {\n            id: Math.floor(Math.random() * 100) + 1,\n            title: getInputTodo\n        }\n\n        props.onCreateTodo(newTodo);\n        setInputTodo('');\n    }\n\n    const handleInputTodo = (event) => {\n        setInputTodo(event.target.value);\n        console.log(getInputTodo);\n    }\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <input type=\"text\" value={getInputTodo} onChange={ handleInputTodo}/>\n            <button type=\"submit\">Add</button>\n        </form>\n    );\n}\n\nexport default TodoCreate;","import \"./Todo.css\";\nimport { useState } from \"react\";\nimport TodoList from \"../todo-List/TodoList\";\nimport TodoCreate from \"../todo-create/TodoCreate\";\n\nconst Todo = () => {\n    const [getTodos, setTodos] = useState([\n        { id: 1, title: \"Eat\" },\n        { id: 2, title: \"Sleep\" },\n        { id: 3, title: \"Code\" },\n    ]);\n\n    const eventCreateTodo = (todo) => {\n        setTodos(getTodos.concat(todo));\n    }\n\n    return (\n        <div>\n            <h3>Todo List</h3>\n            <TodoCreate onCreateTodo={ eventCreateTodo }/>\n            <TodoList dataTodos={ getTodos }/>\n        </div>\n    );\n}\n\nexport default Todo;","import \"./App.css\"\nimport Todo from \"./components/todo/Todo\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Todo/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n    \n    ReactDOM.render(\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n    \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}